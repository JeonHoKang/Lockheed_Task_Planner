
# def recovery_screw_stuck():
#     toolset.add_node(planning_node, "recovery-screw_stuck", "sequential")
#     toolset.add_node("recovery-screw_stuck", "recovery-unscerw", "atomic", agent='r3', duration=6, order_number=0)
#     toolset.add_node("recovery-screw_stuck", "recovery-rescrew", "atomic", agent='r3', duration=8, order_number=1)
#     toolset.export_new_htn()
#
# def recovery_dropped_part():
#     toolset.add_node(planning_node, "recovery-dropped_part", "sequential")
#     toolset.add_node("recovery-dropped_part", "recovery-scan_the_workspace", "atomic", agent='r2', duration=4, order_number=0)
#     toolset.add_node("recovery-dropped_part", "recovery-locate_dropped_part", "atomic", agent='r2', duration=6, order_number=1)
#     toolset.add_node("recovery-dropped_part", "recovery-pick_dropped_part", "atomic", agent='r2', duration=6, order_number=2)
#     toolset.add_node(planning_node, "recovery-notify_monitor", "atomic", agent='r2', duration=6, order_number=3)
#     toolset.export_new_htn()
#
#
# def recovery_engine_failure():
#     toolset.add_node(planning_node, "recovery-engine_failure", "sequential")
#     toolset.add_node("recovery-engine_failure", "recovery-undo_completed_tasks", "atomic", agent="H", duration=6, order_number=0)
#     toolset.add_node("recovery-engine_failure", "recovery-get_new_engine", "sequential", order_number=1)
#     toolset.add_node("recovery-get_new_engine", "recovery-search_current_workspace", "atomic", agent="r1", duration=6, order_number=0)
#     toolset.add_node("recovery-get_new_engine", "recovery-locate_new_engine", "atomic", agent="r1", duration=6, order_number=1)
#     toolset.add_node("recovery-get_new_engine", "recovery-pick_new_engine", "atomic", agent="r1", duration=6, order_number=2)
#     toolset.add_node("recovery-get_new_engine", "recovery-insert_new_engine", "atomic", agent="r1", duration=8, order_number=3)
#     toolset.add_node("recovery-engine_failure", "recovery-redo_completed_task_engine", "atomic", agent="H", duration=6, order_number=2)
#
#
# def recovery_r1_under_maintenance():
#     toolset.set_agent_state("r1", 'unavailable')
#
#
# def recovery_r1_recovered():
#     toolset.set_agent_state("r1", 'available')
#
#
# def recovery_r3_not_available():
#     toolset.set_agent_state("r3", 'unavailable')
#
#
# def recovery_part_collision():
#     toolset.add_node(planning_node, "recovery-part_collision", "sequential")
#     toolset.add_node("recovery-part_collision", "recovery-move_away", "atomic", agent="r1", duration=10, order_number=0)
#     toolset.add_node("recovery-part_collision", "recovery-check_damage", "atomic", agent="H", duration=6, order_number=1)
#     toolset.add_node("recovery-part_collision", "recovery-reattempt_motion", "atomic", agent="r1", duration=12, order_number=2)
#     toolset.export_new_htn()
#
#
# def recovery_screw_not_found():
#     toolset.add_node(planning_node, "recovery-screw_not_found", "sequential")
#     toolset.add_node("recovery-screw_not_found", "recovery-search_screw", "sequential")
#     toolset.add_node("recovery-search_screw", "recovery-scan_workspace", "atomic", agent='H', duration=6, order_number=0)
#     toolset.add_node("recovery-search_screw", "recovery-notify_monitor", "atomic", agent='H', duration=6, order_number=1)
#     toolset.add_node("recovery-screw_not_found", "recovery-insert_new_screw", "atomic", agent='r1', duration=8, order_number=1)
#     toolset.export_new_htn()
#
#
# def recovery_damaged_part():
#     toolset.add_node(planning_node, "recovery-damaged_part", "sequential")
#     toolset.add_node("recovery-damaged_part", "recovery-remove_damaged_part", "atomic", agent='r2', duration=6, order_number=0)
#     toolset.add_node("recovery-damaged_part", "recovery-check_damage", "atomic", agent='H', duration=6, order_number=1)
#     toolset.add_node("recovery-damaged_part", "recovery-replace_part", "atomic", agent='r1', duration=8, order_number=2)
#     toolset.export_new_htn()
#
#
# def recovery_task_collision():
#     toolset.add_node(planning_node, "recovery-task_collision", "sequential")
#     toolset.add_node("recovery-task_collision", "recovery-move_away", "atomic", agent='r1', duration=10, order_number=0)
#     toolset.add_node("recovery-task_collision", "recovery-reattempt_motion", "atomic", agent='r1', duration=12, order_number=1)
#     toolset.export_new_htn()
#
#
# def recovery_Human_on_break():
#     toolset.set_agent_state("H", 'unavailable')
#
#
# def recovery_part_collision():
#     toolset.add_node(planning_node, "recovery-part_collision", "sequential")
#     toolset.add_node("recovery-part_collision", "recovery-move_away", "atomic", agent="r1", duration=10, order_number=0)
#     toolset.add_node("recovery-part_collision", "recovery-check_damage", "atomic", agent="H", duration=6, order_number=1)
#     toolset.add_node("recovery-part_collision", "recovery-reattempt_motion", "atomic", agent="r1", duration=12, order_number=2)
#     toolset.export_new_htn()def recovery_Human_on_break():